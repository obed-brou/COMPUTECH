@page "{id:int}"
@model COMPUTECH.Pages.Blog.DetailsModel
@{
    ViewData["Title"] = Model.BlogPost.Title;
    Layout = "_Layout";
}

<h2>@Model.BlogPost.Title</h2>
<p>@Model.BlogPost.Content</p>

@if (!string.IsNullOrEmpty(Model.BlogPost.ImageUrl))
{
    <img src="@Model.BlogPost.ImageUrl" alt="Blog Image" class="img-fluid" />
}

<h3>Comments</h3>
@foreach (var comment in Model.Comments)
{
    <div>
        <strong>@comment.Author</strong> @comment.DatePosted.ToString("g")
        <p>@comment.Content</p>
    </div>
}

<h4>Add a Comment</h4>
<form method="post">
    <div class="form-group">
        <textarea asp-for="NewComment.Content" class="form-control"></textarea>
        <span asp-validation-for="NewComment.Content" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Post Comment</button>
</form>

<form method="post" asp-page-handler="Like">
    <button type="submit" class="btn btn-primary">👍 Like (@Model.BlogPost.Likes)</button>
</form>

    public async Task<IActionResult>
    OnPostLikeAsync(int id)
    {
    BlogPost = await _context.BlogPosts.FindAsync(id);

    if (BlogPost == null)
    {
    return NotFound();
    }

    BlogPost.Likes += 1;
    await _context.SaveChangesAsync();

    return RedirectToPage(new { id });
    }
